package member.controller;

import java.io.IOException;
import java.sql.Date;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import member.model.service.MemberService;
import member.model.vo.Member;

/**
 * Servlet implementation class MemberEnrollServlet
 */
@WebServlet("/member/memberEnroll")
public class MemberEnrollServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	MemberService memberService = new MemberService();   

	/**
	 * 회원가입 페이지
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.getRequestDispatcher("/WEB-INF/views/member/memberEnroll.jsp").forward(request, response);
		
	}

	/**
	 * 회원가입 처리 - db에 저장(dml)
	 * 
	 * java.sql.Date객체 생성하기 : Date.valueOf("1990-09-09")
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
				//1. encoding처리
				request.setCharacterEncoding("utf-8");
				
				
				//2. 사용자입력값처리
				String memberId = request.getParameter("memberId");
				String password = request.getParameter("password");
				String memberName = request.getParameter("memberName");
				String birthday = request.getParameter("birthday");
				Date bday = Date.valueOf(birthday);
				//java.sql.Date의 valueOf(String s) 메서드는 입력받 문자열 값을 가지고 날짜(Date)로 변경해 준다. 
				//이 때 주의할 것은 날짜형식이 yyyy-mm-dd로 되어야 한다. valueOf("20101122") 이렇게 yyyymmdd 로 입력할 경우 IllegalArgumentException이 발생한다.
				String email = request.getParameter("email");
				String phone = request.getParameter("phone");
				String address = request.getParameter("address");
				String gender = request.getParameter("gender");
				String[] hobby = request.getParameterValues("hobby");
				String hobbies = "";
				hobbies = String.join(",", hobby); //배열을 문자열로 변환(구분자추가)
				
				
				
				
				
				System.out.println("memberId@Enrollservlet = " + memberId);
				System.out.println("password@Enrollservlet = " + password);
				System.out.println("memberName@Enrollservlet = " + memberName);
				System.out.println("birthday@Enrollservlet = " + bday);
				System.out.println("email@Enrollservlet = " + email);
				System.out.println("phone@Enrollservlet = " + phone);
				System.out.println("address@Enrollservlet = " + address);
				System.out.println("gender@Enrollservlet = " + gender);
				System.out.println("hobby@Enrollservlet = " + hobbies);  
				
				
				
				//3. 업무로직 : memberId로 회원객체를 조회 
				//servlet이 처리해야할 업무로직 ->service에 맡긴다
				Member member = new Member();
				member.setMemberId(memberId);
				member.setPassword(password);
				member.setMemberName(memberName);
				member.setBirthday(bday); //Date
				member.setEmail(email);
				member.setPhone(phone);
				member.setAddress(address);
				member.setGender(gender);
				member.setHobby(hobbies); //String ,로 
			
				
				int result = memberService.insertMember(member);
				System.out.println("result@Enrollservlet = " + result);
		
		
		
				//회원가입 성공/실패 여부 판단
				HttpSession session = request.getSession();
				if(result != 0) {
					//회원가입 성공
					session.setAttribute("joinMsg", "회원가입에 성공하셨습니다");
				}else {
					//회원가입 실패
					session.setAttribute("joinMsg", "회원가입에 실패하셨습니다");
				}
		
				//리다이렉트
				response.sendRedirect(request.getContextPath());
		
		
		
		
		
		
		
		
		
		
		
		
		
//				//1.전송값에 한글이 있을 경우 인코딩처리해야함.
//				//void javax.servlet.ServletRequest.setCharacterEncoding(String arg0) throws UnsupportedEncodingException
//				request.setCharacterEncoding("UTF-8");//대소문자 상관없음. 요청한 view단의 charset값과 동일해야 한다.
//				
//				//2.전송값 꺼내서 변수에 기록하기.
//				//String javax.servlet.ServletRequest.getParameter(String arg0)
//				String memberId = request.getParameter("memberId");
//				String password = request.getParameter("password");
//				String memberName = request.getParameter("memberName");
//				String _birthday = request.getParameter("birthday");
//				String gender = request.getParameter("gender");
//				String email = request.getParameter("email");
//				String phone = request.getParameter("phone");
//				String address = request.getParameter("address");
//				
//				//체크박스같은 경우 선택된 복수의 값이 배열로 전달된다.
//				//String[] javax.servlet.ServletRequest.getParameterValues(String arg0)
//				String[] hobbyArr = request.getParameterValues("hobby");
//				
//				String hobby = "";
//				//String java.lang.String.join(CharSequence delimiter, CharSequence... elements)
//				//파라미터로 전달한 문자열배열이 null이면, NullPointerException유발.
//				if(hobbyArr!=null) 
//					hobby = String.join(",", hobbyArr);
//
//				//날짜타입으로 변경 : 1990-09-09
//				Date birthday = null;
//				if(_birthday != null && !"".equals(_birthday))
//					birthday = Date.valueOf(_birthday);
//				
//				Member member = new Member(memberId, password, memberName, MemberService.MEMBER_ROLE, gender, birthday, email, phone, address, hobby, null);
//				
//
//				System.out.println("입력한 회원정보 : "+member);
//				
//				//3.서비스로직호출
//				int result = new MemberService().insertMember(member);
//				
//				//4. 사용자 피드백 및 페이지 리다이렉트
//				String msg = "";
//				if(result>0)
//					msg = "성공적으로 회원가입되었습니다.";
//				else 
//					msg = "회원등록에 실패했습니다.";	
//				
//				request.getSession().setAttribute("msg", msg);
//				
//
//				response.sendRedirect(request.getContextPath());
		
	}

}
